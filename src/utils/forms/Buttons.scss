@import "../Mixins";
@import "../Variables";
@import "./Buttons.mixins";

.button {
  @include fontMontserratMedium;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: $border-radius/2;
  cursor: pointer;
  font-size: 12px;
  text-transform: uppercase;
  padding: 5px 0.833em;
  letter-spacing: .8px;

  &:hover {
    cursor: pointer;
  }

  &:hover[disabled],
  &:hover.disabled {
    cursor: default;
  }

  &[disabled],
  &.disabled {
    border-color: $button-border-disabled;
    background: transparent;
    font-weight: 500;
  }
}

.buttonGroup {
  > .button:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    margin-left: -1px;
  }
  > .button:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}
// --------------- color -----------

@mixin button($map) {

  color: map-get($map, color);
  border-color: map-get($map, border-color);
  background-color: map-get($map, bg);

  &:hover:enabled:not(.disabled),
  &:focus:enabled:not(.disabled),
  &:active:enabled:not(.disabled) {
    color: map-get($map, color-hover);
    background-color: map-get($map, bg-hover);
    border-color: map-get($map, border-color-hover);
  }
}


.grey {
  @include button((
          color: $font-color-base,
          bg: $grey-darkest,
          border-color: $grey-light,
          color-hover: $font-color-base,
    border-color-hover: lighten($button-border-hover, 2%),
  ));
}

.whiteOutlined {
  font-weight: 600; //semibold
  opacity: .99;

  @include button((
          color: $font-color-base,
          bg: $grey-darkest,
          border-color: white,
          color-hover: $font-color-base,
          border-color-hover: white,
          bg-hover: lighten($grey-light, 5%)
  ));
}

.green {
  font-weight: 600;
  opacity: .99;
  @include button((
          color: $font-color-base,
          bg: $green,
          border-color: $green,
          color-hover: $font-color-base,
          border-color-hover: darken($green, 5%),
          bg-hover: darken($green, 5%)
  ));
}


.red {
  font-weight: 600;
  opacity: .99;

  @include button((
          color: $font-color-base,
          bg: $red,
          border-color: $red,
          color-hover: $font-color-base,
          border-color-hover: darken($red, 5%),
          bg-hover: darken($red, 5%)
  ));
}


.white {
  @include button((
    color: $very-dark-greyish-blue,
    bg: $whitish,
    border-color: $white,
    color-hover: #000,
    border-color-hover: #ddd,
    bg-hover: $white
  ));
  font-weight: 600; //semibold
}

.greyWhite{


  @include button((
    color: $white,
    bg: transparent,
    border-color: $dark-greyish-blue,
    color-hover: #000000,
    border-color-hover: rgba(255, 255, 255, 0.90),
    bg-hover: rgba(255, 255, 255, 0.90)
  ))
}

// ----- size ------
@include formInputSizes();

.unsized {
  @include formInputSizes('unsized');
  padding: 0;
}

.block {
  display: block;
  width: 100%;
}

// ----------------------- action button ----------------
.actionButton {
  border: none;
  background: none;
  color: $white;
  line-height: 0.5;
  padding: 6px;
  margin: 0;
  font-weight: 600;
  cursor: pointer;

  &:hover {
    opacity: 0.8;
  }
}

.close {
  $size: 16px;
  width: $size;
  height: $size;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  font-size: 14px;
  color: $grey-dark;
  line-height: 0;

  background: white;
  border-radius: 100%;
}

.instantClose {
  width: 1.75rem;
  height: 1.75rem;
  border-radius: 100%;
  border: 1px solid $brown-reddish;
  padding: 5px;

  &:hover {
    border: 1px solid $brown-reddish-highlight !important;
  }

  svg {
    fill: $errors;
  }
}
